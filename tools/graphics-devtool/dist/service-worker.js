(()=>{var l=0,s=new Map,u=new BroadcastChannel("intercept-channel-main"),i=new BroadcastChannel("intercept-channel-sw");i.onmessage=t=>{let e=t.data;if(e&&e.reply!==void 0){let r=s.get(e.reply);r&&(s.delete(e.reply),e.error?r.reject(e.error):r.resolve(e.result))}};self.addEventListener("fetch",function(t){let e=t.request.url,r=e,o=e.match(/(LOCAL)(\/.*)/i);o?(console.debug("fetch intercepting",t.request.url),t.respondWith(new Promise((n,c)=>{let a=l++;s.set(a,{resolve:n,reject:c}),u.postMessage({type:"fetch",id:a,url:o[2]})}).then(n=>n==="NotFoundError"?new Response(null,{status:404,statusText:"File not found"}):new Response(n.arrayBuffer,{headers:{"Content-Type":n.type,"Cache-Control":"no-cache, no-store, must-revalidate",Pragma:"no-cache",Expires:"0"}})).catch(n=>new Response(null,{status:500,statusText:`Error when intercepting request: ${n}`})))):(console.debug("fetch (letting through)",t.request.url),t.respondWith(fetch(r)))});})();
